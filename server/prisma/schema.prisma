// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  administrator
  user
}

enum TransactionType {
  expense
  income
}

enum DefaultCategory {
  groceries
  transport
  utilities
  entertainment
  shopping
  healthcare
  housing
  salary
  investment
  other
}

enum RecurrenceType {
  none
  weekly
  monthly
  yearly
}

model Users {
  UserID   String    @id @default(uuid()) @map("UserID") @db.Uuid
  Username String    @db.VarChar(50)     @unique @map("Username")
  Password String    @db.VarChar(72)     @map("Password")
  Email    String    @db.VarChar(100)    @unique @map("Email")
  Role     Role                          @map("Role")
  TokenVersion Int   @default(1)         @map("TokenVersion")

  // Relations
  Transactions Transactions[]
  Budgets      Budgets[]
  Categories   Categories[]

  @@map("Users")
}

model Transactions {
  TransactionID  Int       @id @default(autoincrement()) @map("TransactionID")
  UserID         String    @map("UserID") @db.Uuid
  Amount         Decimal   @db.Decimal(15, 2)            @map("Amount")
  Type           TransactionType                         @map("Type")
  TransactionDate DateTime @default(now())               @map("TransactionDate")
  Description    String?   @db.Text                      @map("Description")
  DefaultCategory DefaultCategory?                       @map("DefaultCategory")
  CategoryID     Int?                                     @map("CategoryID")

  // Relations
  Category     Categories?  @relation(fields: [CategoryID], references: [CategoryID])
  User         Users        @relation(fields: [UserID], references: [UserID])

  @@map("Transactions")
}

model Categories {
  CategoryID   Int       @id @default(autoincrement()) @map("CategoryID")
  UserID       String?   @map("UserID") @db.Uuid
  CategoryName String    @db.VarChar(50)               @map("CategoryName")
  CreatedAt    DateTime  @default(now())               @map("CreatedAt")

  // Relations
  User          Users?         @relation(fields: [UserID], references: [UserID])
  Transactions  Transactions[]
  Budgets       Budgets[]

  @@map("Categories")
}

model Budgets {
  BudgetID     Int             @id @default(autoincrement()) @map("BudgetID")
  UserID       String          @map("UserID") @db.Uuid
  CategoryID   Int?            @map("CategoryID")
  Amount       Decimal         @db.Decimal(15, 2)            @map("Amount")
  PeriodStart  DateTime        @map("PeriodStart")
  PeriodEnd    DateTime        @map("PeriodEnd")
  Recurrence   RecurrenceType  @default(monthly)             @map("Recurrence")
  CreatedAt    DateTime        @default(now())               @map("CreatedAt")

  // Relations
  User         Users           @relation(fields: [UserID], references: [UserID])
  Category     Categories?     @relation(fields: [CategoryID], references: [CategoryID])

  @@map("Budgets")
}
