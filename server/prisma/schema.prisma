// --------------------
// Prisma Configuration
// --------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --------------------
// ENUMS
// --------------------
enum TransactionType {
  income
  expense
}

// --------------------
// MODELS
// --------------------

model User {
  id             String         @id @default(uuid()) @db.Uuid
  username       String         @unique
  email          String         @unique
  passwordHash   String
  tokenVersion   Int            @default(1)

  // Relations
  transactions   Transaction[]
  budgets        Budget[]

  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

// Category hierarchy is predefined by admin (not user-created)
model Category {
  id             Int            @id @default(autoincrement())
  parentId       Int?
  name           String
  parent         Category?      @relation("CategoryHierarchy", fields: [parentId], references: [id])
  subcategories  Category[]     @relation("CategoryHierarchy")

  transactions   Transaction[]
  budgets        Budget[]
}

// Transactions belong to a user and one category (optionally)
model Transaction {
  id             Int             @id @default(autoincrement())
  userId         String          @db.Uuid
  categoryId     Int?
  type           TransactionType
  amount         Decimal         @db.Decimal(12, 2)
  date           DateTime        // date only (can store with time but ignore time client-side)
  description    String?

  // Relations
  user           User            @relation(fields: [userId], references: [id])
  category       Category?       @relation(fields: [categoryId], references: [id])

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

// Budgets are monthly, optionally linked to a category
model Budget {
  id             Int             @id @default(autoincrement())
  userId         String          @db.Uuid
  categoryId     Int?
  month          Int
  year           Int
  amount         Decimal         @db.Decimal(12, 2)

  // Relations
  user           User            @relation(fields: [userId], references: [id])
  category       Category?       @relation(fields: [categoryId], references: [id])

  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@unique([userId, month, year, categoryId]) // prevent duplicate budgets
}
